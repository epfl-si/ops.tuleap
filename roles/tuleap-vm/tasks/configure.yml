- include_vars: mysql-vars.yml
- include_vars: tuleap-vars.yml

# Will have to do something better here...
- name: Disable firewalld
  service:
    name: firewalld
    state: stopped
    enabled: no

# ------------------------------------------------------------------------ Email
- name: configure postfix inet protocol
  lineinfile:
    path: /etc/postfix/main.cf
    regexp: '^inet_protocols'
    line: inet_protocols = ipv4
  register: postfix_config


- name: restart postfix if needed
  service:
    name: postfix
    state: restarted
  when: postfix_config.changed

# ------------------------------------------------------------ SQL root password
# This command will fail when the root password was set previously
- name: Check if root password is set
  shell: >
    /opt/rh/rh-mysql57/root/usr/bin/mysqladmin -u root status
  changed_when: false
  failed_when: false
  register: root_pwd_check

- name: Set MySQL root password for the first time (root@localhost)
  mysql_user:
    name: root
    password: "{{ mysql_credentials.local.root_password | eyaml(eyaml_keys) }}"
    host: localhost
    login_unix_socket: "/var/lib/mysql/mysql.sock"
    state: present
  when: root_pwd_check.rc == 0

- name: Set MySQL root password for 127.0.0.1, ::1
  mysql_user:
    name: root
    password: "{{ mysql_credentials.local.root_password | eyaml(eyaml_keys) }}"
    host: "{{ item }}"
    login_user: root
    login_password: "{{ mysql_credentials.local.root_password | eyaml(eyaml_keys) }}"
    login_unix_socket: "/var/lib/mysql/mysql.sock"
    state: present
  with_items:
    - 127.0.0.1
  when: root_pwd_check.rc == 0


- name: Removes anonymous user account for localhost
  mysql_user:
    name: ''
    host: localhost
    state: absent
    login_user: root
    login_password: "{{ mysql_credentials.local.root_password | eyaml(eyaml_keys) }}"
    login_unix_socket: "/var/lib/mysql/mysql.sock"

# ----------------------------------------------------------------------- Tuleap
- name: set compatible sql-mode for mysql
  blockinfile:
    path: "/etc/opt/rh/rh-mysql57/my.cnf.d/rh-mysql57-mysql-server.cnf"
    block: "sql-mode=NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"
    insertafter: '\[server\]'
  register: mysqld_conf

- name: reload mysql
  service:
    name: rh-mysql57-mysqld
    state: restarted
  when: mysqld_conf.changed

- name: check presence of /root/.tuleap_passwd ~ tuleap already initialized 
  stat:
    path: /root/.tuleap_passwd
  register: tuleap_trace

# /usr/share/tuleap/tools/setup.el7.sh --configure --server-name=tuleap.dev.jkldsa.com --mysql-server=localhost --mysql-password=ROOT  --assumeyes
- name: initialize tuleap configuration
  command: 
    argv:
      - /usr/share/tuleap/tools/setup.el7.sh
      - --configure --assumeyes
      - --server-name="{{ tuleap.server_name }}"
      - --mysql-server="{{ mysql_credentials.local.host }}"
      - --mysql-password="{{ mysql_credentials.local.root_password | eyaml(eyaml_keys) }}"
  when: tuleap_trace.stat.exists == False

# Install ssl certificates only for dev domain. 
# Production should get official certs from the router
- name: ssl key
  copy:
    src: "{{ tuleap.ssl.privkey_path }}"
    dest: "/etc/pki/tls/private/localhost.key.pem"
  when: tuleap.server_name is search(devdomain)

- name: ssl cert 
  copy:
    src: "{{ tuleap.ssl.pubcert_path }}"
    dest: "/etc/pki/tls/certs/localhost.cert.pem"
  when: tuleap.server_name is search(devdomain)

- name: ensure ldap authentication is selected
  lineinfile:
    path: /etc/tuleap/conf/local.inc
    regexp: '^\$sys_auth_type'
    line: "$sys_auth_type = 'ldap';"
  register: ldap_configuration

- name: ensure dir for ldap config
  file:
    path: /etc/tuleap/plugins/ldap/etc
    state: directory

- name: ensure LDAP configuration file
  template:
    src: ldap.inc
    dest: /etc/tuleap/plugins/ldap/etc/ldap.inc

- name: restart tuleap php app once ldap plugin is configured
  service:
    name: tuleap-php-fpm
    state: restarted
  when: ldap_configuration.changed

# ----------------------------------------------------------------- Tuleap extra

- name: configure tuleap sender email
  lineinfile:
    path: /etc/tuleap/conf/local.inc
    regexp: '^\$sys_noreply'
    line: $sys_noreply = '"Tuleap" <noreply@epfl.ch>';

- name: configure tuleap site administrator
  lineinfile:
    path: /etc/tuleap/conf/local.inc
    regexp: '^\$sys_email_admin'
    line: $sys_email_admin = '{{ tuleap.site_admin_email }}';

- name: configure tuleap contact email
  lineinfile:
    path: /etc/tuleap/conf/local.inc
    regexp: '^\$sys_email_contact'
    line: $sys_email_contact = '{{ tuleap.contact_email }}';

# --------------------------- experimental: disable local ssl because we use A10
# set the following line in /etc/tuleap/conf/local.inc 
# $sys_https_host = FALSE; // 'tuleap.epfl.ch';
# replace /etc/nginx/conf.d/tuleap.conf with the nginx.conf template

- name: ensure nginx delegate https to external load balancer
  template:
    src: nginx.conf
    dest: /etc/nginx/conf.d/tuleap.conf

- name: ensure tuleap does not redirect to https
  lineinfile:
    path: /etc/tuleap/conf/local.inc
    regexp: '^\$sys_https_host'
    line: $sys_https_host = FALSE;


